---
# Docker Installation and Configuration Tasks

- name: Remove old Docker versions
  apt:
    name:
      - docker
      - docker-engine  
      - docker.io
      - containerd
      - runc
    state: absent

- name: Add Docker GPG key
  apt_key:
    url: https://download.docker.com/linux/debian/gpg
    keyring: /usr/share/keyrings/docker-archive-keyring.gpg
    state: present

- name: Get system architecture
  command: dpkg --print-architecture
  register: system_arch
  changed_when: false

- name: Get distribution codename
  command: lsb_release -cs
  register: distrib_codename
  changed_when: false

- name: Add Docker repository
  apt_repository:
    repo: "deb [arch={{ system_arch.stdout }} signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/debian {{ distrib_codename.stdout }} stable"
    filename: docker
    state: present

- name: Update apt cache for Docker repository
  apt:
    update_cache: true

- name: Install Docker CE
  apt:
    name:
      - docker-ce
      - docker-ce-cli
      - containerd.io
      - docker-buildx-plugin
      - docker-compose-plugin
    state: present

- name: Add DRS user to docker group
  user:
    name: "{{ system_user }}"
    groups: docker
    append: true

- name: Add ansible user to docker group (if different)
  user:
    name: "{{ ansible_user }}"
    groups: docker
    append: true
  when: ansible_user != system_user

- name: Create Docker daemon configuration
  copy:
    content: |
      {
        "log-driver": "json-file",
        "log-opts": {
          "max-size": "10m",
          "max-file": "3"
        },
        "storage-driver": "overlay2",
        "live-restore": true
      }
    dest: /etc/docker/daemon.json
    mode: '0644'
  notify: restart docker

- name: Enable and start Docker service
  systemd:
    name: docker
    enabled: true
    state: started

- name: Wait for Docker service to be ready
  pause:
    seconds: 10

- name: Verify Docker installation
  command: docker --version
  register: docker_version_output
  changed_when: false

- name: Verify Docker Compose installation
  command: docker compose version
  register: docker_compose_version_output
  changed_when: false

- name: Test Docker functionality
  command: docker run --rm hello-world
  register: docker_test_result
  changed_when: false

- name: Display Docker installation results
  debug:
    msg: |
      Docker installation completed successfully:
      - Docker version: {{ docker_version_output.stdout }}
      - Docker Compose version: {{ docker_compose_version_output.stdout }}
      - Test result: {{ 'PASSED' if docker_test_result.rc == 0 else 'FAILED' }}