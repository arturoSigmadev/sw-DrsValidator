---
# DRS Application Deployment Tasks

- name: Create application directory
  file:
    path: "{{ app_dir }}"
    state: directory
    owner: "{{ system_user }}"
    group: "{{ system_group }}"
    mode: '0755'

- name: Copy application source code
  copy:
    src: "../../../src/"
    dest: "{{ app_dir }}/src/"
    owner: "{{ system_user }}"
    group: "{{ system_group }}"

- name: Copy project configuration files
  copy:
    src: "{{ item }}"
    dest: "{{ app_dir }}/"
    owner: "{{ system_user }}"
    group: "{{ system_group }}"
  loop:
    - "../../../requirements.txt"
    - "../../../Dockerfile"
    - "../../../docker-compose.yml"

- name: Create environment file
  template:
    src: ../templates/app.env.j2
    dest: "{{ app_dir }}/.env"
    owner: "{{ system_user }}"
    group: "{{ system_group }}"
    mode: '0600'

- name: Build DRS Docker image
  command: docker build -t {{ docker_image_name }}:{{ docker_image_tag }} .
  args:
    chdir: "{{ app_dir }}"
  become_user: "{{ system_user }}"
  register: docker_build_result

- name: Create systemd service file
  template:
    src: ../templates/drs-validation.service.j2
    dest: /etc/systemd/system/drs-validation.service
    mode: '0644'
  notify: restart drs-service

- name: Reload systemd daemon
  systemd:
    daemon_reload: true

- name: Start DRS application with Docker Compose
  command: docker compose up -d --remove-orphans
  args:
    chdir: "{{ app_dir }}"
  become_user: "{{ system_user }}"
  register: docker_compose_up_result

- name: Enable DRS systemd service
  systemd:
    name: drs-validation
    enabled: true
    state: started

- name: Wait for application to be ready
  pause:
    seconds: 30

- name: Verify Docker containers are running
  command: docker compose ps
  args:
    chdir: "{{ app_dir }}"
  become_user: "{{ system_user }}"
  register: container_status
  changed_when: false

- name: Create DRS management script
  template:
    src: ../templates/drs-commands.sh.j2
    dest: "{{ base_dir }}/drs-commands.sh"
    owner: "{{ system_user }}"
    group: "{{ system_group }}"
    mode: '0755'

- name: Create symlink for DRS commands
  file:
    src: "{{ base_dir }}/drs-commands.sh"
    dest: /usr/local/bin/drs
    state: link

- name: Display application deployment results
  debug:
    msg: |
      DRS Application deployment completed:
      - Docker image built: {{ docker_build_result.rc == 0 }}
      - Containers started: {{ docker_compose_up_result.rc == 0 }}
      - Service enabled: drs-validation
      - Management command: drs
      Container status:
      {{ container_status.stdout }}
